// import 'zone.js/node';
// import { fileURLToPath } from 'node:url';
// import { dirname, join, resolve } from 'node:path';
// import * as http from 'http';
// import {AngularNodeAppEngine, createNodeRequestHandler, isMainModule, writeResponseToNodeResponse } from '@angular/ssr/node';

// import express from 'express';

// const __dirname = dirname(fileURLToPath(import.meta.url));
// const browserDistFolder = resolve(__dirname, '../browser');

// export function app(): express.Express {
//   const server = express();
//   const serverDistFolder = dirname(fileURLToPath(import.meta.url));
//   const browserDistFolder = resolve(serverDistFolder, '../browser');

//   const angularNodeAppEngine = new AngularNodeAppEngine();

//   console.log('Server starting...');
//   console.log('Serving static files from:', browserDistFolder);

//   // Serve static files
//   // server.use(
//   //   express.static(browserDistFolder, {
//   //     maxAge: '1y',
//   //     index: false,
//   //     redirect: false,
//   //   })
//   // );



//   server.get(
//     '**',
//     express.static(browserDistFolder, {
//       maxAge: '1y',
//       index: 'index.html',
//     })
//   );

//   // All regular routes use the Angular engine
//   server.get('*', (req, res, next) => {
//     angularNodeAppEngine
//       .handle(req, { server: 'express' })
//       .then((response) => (response ? writeResponseToNodeResponse(response, res) : next()))
//       .catch(next);
//   });

//   return server;
// }

// const server = app();

// if (isMainModule(import.meta.url)) {
//   const port = process.env['PORT'] || 4000;

//   // Avvia il server
//   server.listen(port, () => {
//     console.log(`Node Express server listening on http://localhost:${port}`);
//   });
// }

// // Start server if running directly
// // if (process.env['SSR']) {
// //   console.log('Starting server in SSR mode...');
// //   run();
// // }

// // export default run;

// console.warn('Node Express server started');

// // This exposes the RequestHandler
// export default createNodeRequestHandler(server);



// src/server.ts
import 'zone.js/node';
import { fileURLToPath } from 'node:url';
import { dirname, join, resolve } from 'node:path';
import express from 'express';
import { 
  AngularNodeAppEngine, 
  createNodeRequestHandler, 
  isMainModule, 
  writeResponseToNodeResponse
} from '@angular/ssr/node';
import bootstrap from './main.server';

// Ottieni il percorso corrente
const currentFilePath = fileURLToPath(import.meta.url);
const serverDistFolder = dirname(currentFilePath);
const browserDistFolder = resolve(serverDistFolder, '../browser');

console.log('Server starting...');
console.log('Server dist folder:', serverDistFolder);
console.log('Browser dist folder:', browserDistFolder);

const app = express();

// Inizializza l'engine
const engine = new AngularNodeAppEngine();

// Serve static files
app.use(express.static(browserDistFolder, {
    maxAge: '1y',
    index: false,
    redirect: false,
}));

// Handle all other requests
app.use('/**', (req, res, next) => {
  console.log('Request:', req.url);

  engine.handle(req, { 
    baseUrl: '/',
    documentFilePath: join(browserDistFolder, 'index.html'),
    url: req.url,
    bootstrap 
  })
    .then((response) => {
      if (response) {
        console.log('Responding with SSR content');
        return writeResponseToNodeResponse(response, res);
      }
      console.log('No SSR response, falling back to next handler');
      return next();
    })
    .catch((error) => {
      console.error('Error handling request:', error);
      next(error);
    });
});

// Start server if running directly
if (isMainModule(import.meta.url)) {
  const port = process.env['PORT'] || 4000;
  app.listen(port, () => {
    console.log(`Node Express server listening on http://localhost:${port}`);
  });
}

// Request handler used by the Angular CLI
export default createNodeRequestHandler(app);